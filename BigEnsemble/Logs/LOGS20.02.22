20.02.22
back to figuring out the differences in imports, between just import, 
import from, inheritance, libraries etc.. it's all a bit confusing as
it looks like in the end, we are getting very similar results,
either whatever that function returned, or the logic of the function to
return something depending on the input 

https://forum.openzeppelin.com/t/import-vs-import-and-inherit/4772
https://ethereum.stackexchange.com/questions/111850/i-need-help-understanding-differences-between-inheritance-import-vs-separate-con

https://docs.soliditylang.org/en/v0.7.5/layout-of-source-files.html#importing-other-source-files
=> It is better to import specific data/functions to not pollute the namespace (?)
for example
``` import * as symbolName from "filename";
 ```
 or``` import "filename" as symbolName;```


21.02.22

I still don't understand why Aave's imports require {} and all the other imports I've seen so far,
do not seem to require them brackets at all. 
I need to learn more about importing and how those different styles of imports affect how I can
use the imported stuff
https://docs.soliditylang.org/en/v0.8.9/path-resolution.html
https://docs.soliditylang.org/en/v0.8.9/path-resolution.html#import-remapping

I'm trying to modify the way I import what I need to be using for the flashloan
but I'm nt finding options to my question: V3 is the most recent version, but the flashloan
part is in process to be made available, and the page for it (https://docs.aave.com/developers/guides/flash-loans)
direct us back to the v2; so should import aave V3 and use the way V2 flashloans were made, replacing 
each file by the appropriate corresponding V3, or should I directly interact with the V2 and forget
about the V3 ?